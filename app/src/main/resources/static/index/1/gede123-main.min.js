var config = {
    maxEnvCount: 20,
    maxCateCount: 100,
    maxUrlCount: 100,
    maxNameLen: 100,
    maxDescLen: 100,
    maxUrlLen: 300,
    isSet: false,
    isGoogleWarn: false
};
var busy = false;
var searchWords = {
    init: function () {
        $("#gd-frm").submit(function (e) {
            var en = gdkey.get("gd_engine"),
                action = $("#gd-frm").attr("action");
            // if (en === 'local') {
            //     if (!action) {
            //         e.preventDefault();
            //         return false
            //     }
            //     ;
            //     setTimeout(function () {
            //         $("#gd-frm").attr("action", '')
            //     }, 100)
            // }
        });
        $('#query-engine-list').on('show.bs.dropdown', function () {
            $(".query").addClass("list-group-query-list")
        });
        $('#query-engine-list').on('hide.bs.dropdown', function () {
            $(".query").addClass("list-group-query-list")
        });
        $(document).click(function () {
            engine.suggest.hide();
            if ($('#container-style').hasClass('in')) {
                $('#container-style').collapse('toggle');
                $('#change-style').toggleClass('collapsed')
            }
            ;
            if ($('#query-engine-list').hasClass('open')) {
                $('#query-engine').dropdown('hide')
            }
        });
        $("#query-engine").click(function () {
            engine.suggest.hide()
        });
        if ($.cookie("gd_engine") == "google") {
            engine.google()
        } else {
            engine.baidu()
        }
        ;
        $("#engine-list li").click(function () {
            var $this = this;
            $("#query-engine").html($($this).html() + "<span class='gd-caret margin-left-5'></span>");
            $("#query-input").attr("placeholder", $($this).attr("holder"));
            busy = false;
            var en = $(this).attr("action");
            if (en == "engine-baidu") {
                engine.baidu()
            } else if (en == "engine-local") {
                engine.local()
            } else {
                engine.google()
            }
        });
        searchWords.focus()
    },
    focus: function () {
        $("#query-input").click(function () {
            searchWords.query(this.value)
        }).keyup(function (event) {
            var key = event.keyCode;
            if ((key >= 48 && key <= 105) || key == 8 || key == 32) {
                searchWords.query(this.value)
            }
        }).keydown(function (event) {
            var key = event.keyCode;
            var sugList = $("#gd-sug-list");
            if (key == 38 || key == 40) {
                if (key == 38) {
                    if (index == -1) {
                        index = sugList.find("a").length - 1
                    } else {
                        index--
                    }
                } else if (key == 40) {
                    if (index == sugList.find("a").length - 1) {
                        index = 0
                    } else {
                        index++
                    }
                }
                var a = sugList.find("a:eq(" + index + ")");
                a.addClass("item-chosen").siblings().removeClass("item-chosen");
                var engine = gdkey.get('gd_engine');
                if (engine == 'local') {
                    $("#gd-frm").attr("action", a.attr("href"))
                }
                else
                    {
                    $("#query-input").val($(a).text())
                }
            }
        })
    },
    query: function (q) {
        if (busy || q == "") {
            engine.suggest.hide();
            return false
        }
        var en = gdkey.get("gd_engine");
        if (en == "baidu") {
            var sugBaiduUrl = "https://sp0.baidu.com/5a1Fazu8AA54nxGko9WTAnF6hhy/su";
            $.ajax({
                url: sugBaiduUrl,
                type: 'GET',
                dataType: 'jsonp',
                data: {
                    json: 1,
                    cb: 'engine.suggest.callback.baidu',
                    wd: q
                },
                beforeSend: function () {
                    busy = true
                },
                complete: function (result) {
                    busy = false
                }
            })
        } else if (en == "local") {
            var uid = 1;
            var stype = 2;
            var scode = 123456;
            var user = gdkey.get("gd_user");
            if (user != null) {
                var userinfo = user.split(",");
                uid = userinfo[0];
                stype = userinfo[2];
                scode = userinfo[3]
            }
        } else {
            var sugGoogleUrl = "https://www.google.com/complete/search?client=hp";
            $.ajax({
                url: sugGoogleUrl,
                type: 'GET',
                dataType: 'jsonp',
                data: {
                    callback: 'engine.suggest.callback.google',
                    q: q
                },
                beforeSend: function () {
                    busy = true
                },
                complete: function (result) {
                    busy = false
                }
            })
        }
    }
};
var index = -1;
var engine = {
    init: function (type) {
    },
    baidu: function () {
        $("#gd-frm").attr("action", "http://www.baidu.com/s");
        $("#query-input").attr("name", "wd");
        var $this = $("#engine-list li").eq(0);
        $("#query-engine").html($($this).html() + "<span class='gd-caret margin-left-5'></span>");
        $("#query-input").attr("placeholder", $($this).attr("holder"));
        gdkey.set("gd_engine", "baidu")
    },
    google: function () {
        $("#gd-frm").attr("action", "http://www.google.com/search");
        $("#query-input").attr("name", "q");
        var $this = $("#engine-list li").eq(1);
        $("#query-engine").html($($this).html() + "<span class='gd-caret margin-left-5'></span>");
        $("#query-input").attr("placeholder", $($this).attr("holder"));
        gdkey.set("gd_engine", "google")
    },
    local: function () {
        $("#gd-frm").attr("action", "http://127.0.0.1:8080/?");
        // $("#query-input").attr("name", "?");
        var $this = $("#engine-list li").eq(2);
        $("#query-engine").html($($this).html() + "<span class='gd-caret margin-left-5'></span>");
        $("#query-input").attr("placeholder", $($this).attr("holder"));
        gdkey.set("gd_engine", "local")
    },
    suggest: {
        getEngineSug: function () {
            return $("#gd-sug-list")
        },
        hide: function () {
            var sug = this.getEngineSug();
            util.hideObjNoFade(sug);
            sug.html("");
            $(".query,#query-engine,#query-enter").removeClass("list-group-query-list")
        },
        show: function () {
            var sug = this.getEngineSug();
            util.showObjNoFade(sug);
            sug.html("");
            $(".query,#query-engine,#query-enter").addClass("list-group-query-list")
        },
        callback: {
            baidu: function (result) {
                index = -1;
                var sugResult = result.s;
                if (sugResult.length == 0) {
                    engine.suggest.hide();
                    return false
                }
                ;
                engine.suggest.show();
                for (var i = 0; i < sugResult.length; i++) {
                    var baiduHref = "http://www.baidu.com/s?wd=" + sugResult[i];
                    var googleHref = "http://www.google.com/search?q=" + sugResult[i];
                    var href = gdkey.get("gd_engine") == "google" ? googleHref : baiduHref;
                    engine.suggest.getEngineSug().append("<a href='" + href + "' target='_blank' class='list-group-item'>" + sugResult[i] + "</a>")
                }
                ;
                $("a[class='list-group-item']").click(function () {
                    engine.suggest.hide()
                })
            },
            local: function (result) {
                index = -1;
                var sugResult = result;
                if (sugResult.length == 0) {
                    engine.suggest.hide();
                    return false;
                }
                engine.suggest.show();
                var url = "http://127.0.0.1:8080/?"+sugResult
                // window.location.href = url;
                console.info(sugResult);
                engine.suggest.getEngineSug().append("<a href='" + url + "' target='_blank' class='list-group-item'>" + "</a>")
                $("a[class='list-group-item']").click(function () {
                    engine.suggest.hide()
                })
            },
            google: function (result) {
                index = -1;
                var sugResult = result[1];
                if (sugResult.length == 0) {
                    engine.suggest.hide();
                    return false
                }
                engine.suggest.show();
                for (var i = 0; i < sugResult.length; i++) {
                    var googleHref = "http://www.google.com/search?q=" + sugResult[i][0];
                    engine.suggest.getEngineSug().append("<a href='" + googleHref + "' target='_blank' class='list-group-item'>" + sugResult[i][0] + "</a>")
                }
                $("a[class='list-group-item']").click(function () {
                    engine.suggest.hide()
                })
            }
        }
    }
};
var timer;
var util = {
    empty: function (id) {
        $("#" + id).html("")
    },
    emptyTab: function (tab) {
        $("div[data-tab='" + tab + "'] ul").html("")
    },
    json: function (str) {
        return eval('(' + str + ')')
    },
    msg: function (id, msg) {
        $("#" + id).html("<span class='color-red'><i class='glyphicon glyphicon-info-sign'></i> " + msg + "</span>");
        util.show(id);
        if (timer != null) {
            clearTimeout(timer)
        }
        timer = setTimeout(function () {
            util.hide(id);
            clearTimeout(timer)
        }, 3000)
    },
    loadingMsg: function (id, msg) {
        $("#" + id).html("<span class='color-blue'><i class='glyphicon glyphicon-transfer'></i> " + msg + "</span>");
        util.show(id)
    },
    showNoFade: function (id) {
        $("#" + id).removeClass("gd-hide")
    },
    hideNoFade: function (id) {
        $("#" + id).addClass("gd-hide")
    },
    showObjNoFade: function (obj) {
        $(obj).removeClass("gd-hide")
    },
    hideObjNoFade: function (obj) {
        $(obj).addClass("gd-hide")
    },
    show: function (id) {
        $("#" + id).fadeIn()
    },
    showObj: function (obj, callback) {
        $(obj).fadeIn(callback)
    },
    hide: function (id) {
        $("#" + id).hide()
    },
    fadeIn: function (id, fun) {
        $("#" + id).fadeIn("slow", fun)
    },
    fadeOut: function (id, fun) {
        $("#" + id).fadeOut("slow", fun)
    },
    hideObj: function (obj) {
        $(obj).hide()
    },
    checkPri: function (isAlert) {
        var userType = gdkey.get("gd_user").split(",")[2];
        if (userType == 2) {
            if (isAlert) {
                log.note("您现在共享他人的账号，不允许操作！")
            }
            return false
        }
        return true
    },
    getLen: function (str) {
        var len = 0;
        for (var i = 0; i < str.length; i++) {
            var a = str.charAt(i);
            if (a.match(/[^-ÿ]/ig) != null) {
                len += 2
            } else {
                len += 1
            }
        }
        return len
    },
    getMax: function (id) {
        var maxSort = 0;
        $("#" + id + " a").each(function (i, d) {
            var sort = $(d).attr('sort');
            if (sort > maxSort) {
                maxSort = sort
            }
        });
        return parseInt(maxSort) + 1
    },
    highlight: function (str, key) {
        var reg = eval("/" + key + "/g");
        return str.replace(reg, "<span style='border-bottom: 1px dotted #AF3C17;padding-bottom: 2px;'>" + key + "</span>")
    },
    noDataWarn: function (obj, title) {
    },
    alert: function (result) {
        var content = "";
        if (result.success) {
            content = '<div class="gede-small-content"><span class="text-success">' + result.msg + '<span></div>'
        } else {
            content = '<div class="gede-small-content"><span class="text-danger">' + result.msg + '<span></div>'
        }
        ;
        $.alert({
            title: false,
            animation: 'scalex',
            content: content,
            cancelButton: false,
            confirmButton: false
        })
    },
    confirm: function (content, confirmCallback) {
        $.confirm({
            title: '<i class="gede-small-title"></i> 歌德书签',
            animation: 'scale',
            content: content,
            confirmButton: "确定",
            confirm: confirmCallback
        })
    }
};
var gdkey = {
    keys: null,
    add: function (key, data) {
        if (new RegExp("^gd_tab_gd_env").test(key) && gdkey.get("gd_keys").indexOf(key) == -1) {
            if (this.keys == null) {
                this.keys = key
            } else {
                this.keys += ',' + key
            }
        }
        ;
        $.cookie(key, data, {
            expires: 30,
            path: '/'
        });
        $.cookie('gd_keys', this.keys, {
            expires: 30,
            path: '/'
        })
    },
    set: function (key, data) {
        $.cookie(key, data, {
            expires: 30,
            path: '/'
        })
    },
    get: function (key) {
        return $.cookie(key)
    },
    remove: function (key) {
        $.removeCookie(key)
    },
    removeAll: function () {
        this.keys = $.cookie('gd_keys');
        if (this.keys != null) {
            $.each(this.keys.split(","), function (i, d) {
                $.removeCookie(d)
            })
        }
    },
    getCurEnv: function () {
        return gdkey.get("gd_env")
    },
    getCurTab: function () {
        return gdkey.get("gd_tab_" + this.getCurEnv())
    },
    user: {
        getCurUserId: function () {
            return this.get(0)
        },
        getCurUserName: function () {
            return this.get(1)
        },
        getCurUserType: function () {
            return this.get(2)
        },
        getCurUserSCode: function () {
            return this.get(3)
        },
        getCurShareUserName: function () {
            return this.get(4)
        },
        get: function (index) {
            var user = gdkey.get("gd_user");
            if (!user) {
                return -1
            }
            return user.split(",")[index]
        }
    }
};
$(window).resize(function () {
    autoHeight()
});
